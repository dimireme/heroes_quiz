{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\app.svelte",
    "..\\src\\pages\\questions.svelte",
    "..\\src\\components\\input.svelte",
    "..\\src\\components\\counter.svelte",
    "..\\src\\components\\record.svelte",
    "..\\src\\components\\image.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Questions from '/pages/questions.svelte';\n</script>\n\n<main>\n    <Questions />\n</main>\n\n<style>\n    main {\n        max-width: 640px;\n        margin: 0 auto;\n        padding: 50px 0;\n    }\n</style>",
    "<script>\n    import list from '/constants/questions.json';\n    import Input from '/components/input.svelte';\n    import Counter from '/components/counter.svelte';\n    import Record from '/components/record.svelte';\n\n    let search = '';\n    let searchRef;\n\n\t$: filteredQuestions = list.filter(({ question, answers }) => {\n\t\tconst re = new RegExp(search, 'i');\n\t\treturn (\n\t\t\tre.test(question.text) ||\n\t\t\tanswers.some(answer => re.test(answer.text))\n\t\t);\n\t});\n\n\t$: count = filteredQuestions.length;\n\t$: total = list.length;\n\n    const handleInput = ({ detail }) => {\n        search = detail.value;\n\t};\n\n    const handleKeydown = (event) => {\n        if (event.code === 'Escape') {\n            searchRef.setFocus();\n            window.scrollTo({ top: 0, behavior: \"smooth\"}); // TODO: doesn't work.\n            search = '';\n        }\n    };\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<div class=\"questions__header\">\n\t<Input className=\"input\" placeholder=\"вопрос...\" on:input={handleInput} value={search} bind:this={searchRef} />\n\t<Counter {count} {total} />\n</div>\n\n<div class=\"info-message\">ESC - очистить фильтр</div>\n\n<div id=\"answers\" class=\"answers\">\n\t{#each filteredQuestions as item (item.id)}\n\t\t<Record {item} />\n\t{/each}\n</div>\n\n<style>\n\t.questions__header {\n\t\tdisplay: flex;\n        align-items: center;\n\t}\n    .questions__header :global(.input) {\n        flex-grow: 1;\n\t\tpadding-right: 1em;\n    }\n    .info-message {\n        font-size: 0.6em;\n    }\n</style>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\tconst dispatch = createEventDispatcher();\n\n    export let className = '';\n\texport let placeholder = '';\n\texport let value = '';\n\texport let type = 'text';\n\n\tlet inputRef;\n\texport const setFocus = () => inputRef.focus();\n\n\tconst handleInput = (event) => {\n\t\tdispatch('input', {\n\t\t\tvalue: event.target.value,\n        });\n\t}\n</script>\n\n<label class=\"{className}\">\n\t<input {type} {value} {placeholder} on:input={handleInput} bind:this={inputRef} />\n</label>\n\n<style>\n    input {\n\t\tdisplay: block;\n\t\twidth: 100%;\n    }\n</style>",
    "<script>\n\texport let count;\n    export let total;\n</script>\n\n<div>{count} / {total}</div>\n\n<style>\n\tdiv {\n\t\tmargin-bottom: 0.5em;\n\t}\n</style>",
    "<script>\n\timport Image from '/components/image.svelte'\n\texport let item;\n\n\tconst { id, question, answers } = item;\n</script>\n\n<div class=\"container\">\n\t<div class=\"question\">\n        <span>{id+1}. {question.text}</span>\n\t\t{#if question.img} <Image img={question.img} />{/if}\n\t</div>\n\t{#each answers as answer}\n\t\t<div class=\"answer\">\n            <span>{answer.text}</span>\n\t\t\t{#if answer.img} <Image img={answer.img} />{/if}\n\t\t</div>\n\t{/each}\n</div>\n\n<style>\n    .container {\n        margin: 1em 0;\n        padding: 0.5em;\n        border: 1px solid bisque;\n        border-radius: 6px;\n        background-color: antiquewhite;\n    }\n\n    .question {\n        display: flex;\n        align-items: center;\n    }\n\n\t.question > span {\n\t\tpadding-right: 1em;\n\t}\n\n    .answer {\n        font-weight: bold;\n        text-align: center;\n        margin: 1em 0;\n    }\n</style>",
    "<script>\n\texport let img;\n\tconst { src, alt, width=50, height=50 } = img;\n</script>\n\n<img {src} {alt} {width} {height} />\n\n<style>\n\timg {\n\t\tdisplay: inline-block;\n\t\tline-height: 0;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "AASI,IAAI,eAAC,CAAC,AACF,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CAAC,CAAC,AACnB,CAAC;ACoCJ,kBAAkB,eAAC,CAAC,AACnB,OAAO,CAAE,IAAI,CACP,WAAW,CAAE,MAAM,AAC1B,CAAC,AACE,iCAAkB,CAAC,AAAQ,MAAM,AAAE,CAAC,AAChC,SAAS,CAAE,CAAC,CAClB,aAAa,CAAE,GAAG,AAChB,CAAC,AACD,aAAa,eAAC,CAAC,AACX,SAAS,CAAE,KAAK,AACpB,CAAC;ACnCD,KAAK,cAAC,CAAC,AACT,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,AACT,CAAC;ACnBJ,GAAG,eAAC,CAAC,AACJ,aAAa,CAAE,KAAK,AACrB,CAAC;ACWE,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CACxB,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,YAAY,AAClC,CAAC,AAED,SAAS,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACvB,CAAC,AAEJ,uBAAS,CAAG,IAAI,cAAC,CAAC,AACjB,aAAa,CAAE,GAAG,AACnB,CAAC,AAEE,OAAO,cAAC,CAAC,AACL,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CAAC,CAAC,AACjB,CAAC;AClCJ,GAAG,cAAC,CAAC,AACJ,OAAO,CAAE,YAAY,CACrB,WAAW,CAAE,CAAC,AACf,CAAC"
}