{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\app.svelte",
    "..\\src\\pages\\questions.svelte",
    "..\\src\\components\\input.svelte",
    "..\\src\\components\\counter.svelte",
    "..\\src\\components\\record.svelte",
    "..\\src\\components\\image.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import Questions from '/pages/questions.svelte';\r\n</script>\r\n\r\n<main>\r\n    <Questions />\r\n</main>\r\n\r\n<style>\r\n    main {\r\n        max-width: 640px;\r\n        margin: 0 auto;\r\n    }\r\n</style>",
    "<script>\r\n    import list from '/constants/questions.json';\r\n    import Input from '/components/input.svelte';\r\n    import Counter from '/components/counter.svelte';\r\n    import Record from '/components/record.svelte';\r\n\r\n    let search = '';\r\n    let searchRef;\r\n    let headerRef;\r\n\r\n\t$: filteredQuestions = list.filter(({ question, answers }) => {\r\n\t\tconst re = new RegExp(search, 'i');\r\n\t\treturn (\r\n\t\t\tre.test(question.text) ||\r\n\t\t\tanswers.some(answer => re.test(answer.text))\r\n\t\t);\r\n\t});\r\n\r\n    const handleInput = ({ detail }) => {\r\n        search = detail.value;\r\n\t};\r\n\r\n    const handleKeydown = (event) => {\r\n        if (event.code === 'Escape') {\r\n            searchRef.setFocus();\r\n            headerRef.scrollIntoView();\r\n            search = '';\r\n        }\r\n    };\r\n</script>\r\n\r\n\r\n\r\n<svelte:window on:keydown={handleKeydown} />\r\n\r\n<div class=\"questions__header\" bind:this={headerRef} >\r\n\t<Input className=\"input\" placeholder=\"вопрос...\" on:input={handleInput} value={search} bind:this={searchRef} />\r\n\t<Counter count={filteredQuestions.length} total={list.length} />\r\n</div>\r\n\r\n<div class=\"info-message\">ESC - очистить фильтр</div>\r\n\r\n<div class=\"answers\">\r\n\t{#each filteredQuestions as item (item.id)}\r\n\t\t<Record {item} />\r\n\t{/each}\r\n</div>\r\n\r\n\r\n\r\n<style>\r\n\t.questions__header {\r\n\t\tpadding-top: 50px;\r\n\t\tdisplay: flex;\r\n        align-items: center;\r\n\t}\r\n    .questions__header :global(.input) {\r\n        flex-grow: 1;\r\n\t\tpadding-right: 1em;\r\n    }\r\n    .info-message {\r\n        font-size: 0.6em;\r\n    }\r\n</style>\r\n",
    "<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n    export let className = '';\r\n\texport let placeholder = '';\r\n\texport let value = '';\r\n\texport let type = 'text';\r\n\r\n\tlet inputRef;\r\n\texport const setFocus = () => inputRef.focus();\r\n\r\n\tconst handleInput = (event) => {\r\n\t\tdispatch('input', {\r\n\t\t\tvalue: event.target.value,\r\n        });\r\n\t}\r\n</script>\r\n\r\n<label class=\"{className}\">\r\n\t<input {type} {value} {placeholder} on:input={handleInput} bind:this={inputRef} />\r\n</label>\r\n\r\n<style>\r\n    input {\r\n\t\tdisplay: block;\r\n\t\twidth: 100%;\r\n    }\r\n</style>",
    "<script>\r\n\texport let count;\r\n    export let total;\r\n</script>\r\n\r\n<div>{count} / {total}</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tmargin-bottom: 0.5em;\r\n\t}\r\n</style>",
    "<script>\r\n\timport Image from '/components/image.svelte'\r\n\texport let item;\r\n\r\n\tconst { id, question, answers } = item;\r\n</script>\r\n\r\n\r\n\r\n<div class=\"container\">\r\n\t<div class=\"question\">\r\n        <span>{id+1}. {question.text}</span>\r\n\t\t{#if question.img} <Image img={question.img} />{/if}\r\n\t</div>\r\n\t{#each answers as answer}\r\n\t\t<div class=\"answer\">\r\n            <span>{answer.text}</span>\r\n\t\t\t{#if answer.img} <Image img={answer.img} />{/if}\r\n\t\t</div>\r\n\t{/each}\r\n</div>\r\n\r\n\r\n\r\n<style>\r\n    .container {\r\n        margin: 1em 0;\r\n        padding: 0.5em;\r\n        border: 1px solid bisque;\r\n        border-radius: 6px;\r\n        background-color: antiquewhite;\r\n    }\r\n\r\n    .question {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n\t.question > span {\r\n\t\tpadding-right: 1em;\r\n\t}\r\n\r\n    .answer {\r\n        font-weight: bold;\r\n        text-align: center;\r\n        margin: 1em 0;\r\n    }\r\n</style>",
    "<script>\r\n\texport let img;\r\n\tconst { src, alt, width=50, height=50 } = img;\r\n</script>\r\n\r\n<img {src} {alt} {width} {height} />\r\n\r\n<style>\r\n\timg {\r\n\t\tdisplay: inline-block;\r\n\t\tline-height: 0;\r\n\t}\r\n</style>"
  ],
  "names": [],
  "mappings": "AASI,IAAI,cAAC,CAAC,AACF,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAClB,CAAC;ACuCJ,kBAAkB,eAAC,CAAC,AACnB,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACP,WAAW,CAAE,MAAM,AAC1B,CAAC,AACE,iCAAkB,CAAC,AAAQ,MAAM,AAAE,CAAC,AAChC,SAAS,CAAE,CAAC,CAClB,aAAa,CAAE,GAAG,AAChB,CAAC,AACD,aAAa,eAAC,CAAC,AACX,SAAS,CAAE,KAAK,AACpB,CAAC;ACtCD,KAAK,eAAC,CAAC,AACT,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,AACT,CAAC;ACnBJ,GAAG,cAAC,CAAC,AACJ,aAAa,CAAE,KAAK,AACrB,CAAC;ACeE,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CACxB,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,YAAY,AAClC,CAAC,AAED,SAAS,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACvB,CAAC,AAEJ,wBAAS,CAAG,IAAI,eAAC,CAAC,AACjB,aAAa,CAAE,GAAG,AACnB,CAAC,AAEE,OAAO,eAAC,CAAC,AACL,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CAAC,CAAC,AACjB,CAAC;ACtCJ,GAAG,cAAC,CAAC,AACJ,OAAO,CAAE,YAAY,CACrB,WAAW,CAAE,CAAC,AACf,CAAC"
}